extends ../../layout/default.pug
include ../../mixins/pagination.pug

block main
    .card.mb-3
        .card-header.bg-primary.text-white
            h3.card-title Danh sách danh mục
        .card-body
            .row
                .col-md-6
                    form.form-inline.my-2.my-lg-0(method="POST", action="", form-search)
                        input.form-control.mr-sm-2(type="search", placeholder="Tìm danh mục", aria-label="Search", name="search")
                        button.btn.btn-outline-success.my-2.my-sm-0(type="submit") Tìm
                .col-md-2
                .col-md-3 
                    // Nút mở modal
                    button.btn.btn-success.my-2.my-sm-o(type="button", data-toggle="modal", data-target="#addCategoryModal") +Thêm danh mục mới

            p  
            table.table.table-striped.table-hover
                thead.thead-dark 
                    tr
                        th STT
                        th Tên danh mục
                        th Số lượng sách
                        th Thao tác
                tbody
                    if (!categories || categories.length === 0)
                        tr
                            td(colspan="6") Không tìm danh mục nào
                    else
                        each item, index in categories
                            tr
                                td= index + 1
                                td= item.name
                                td= numberBook[index]  
                                td
                                    a.btn.btn-primary(href=`/admin/category/${item.name}/${numberBook[index]}`) Sách thuộc danh mục

                                    button.btn.btn-danger(data-id=item.categoryID, onclick='deleteCategory(this)') Xóa
                                    button.btn.btn-primary(data-id=item.categoryID, data-toggle='modal', data-target='#editCategoryModal') Đổi tên
            +pagination(currentPage, totalPage)

    // Modal thêm danh mục mới
    .modal.fade#addCategoryModal(tabindex="-1", role="dialog", aria-labelledby="addCategoryModalLabel", aria-hidden="true")
        .modal-dialog(role="document")
            .modal-content
                .modal-header
                    h5.modal-title#addCategoryModalLabel Thêm danh mục mới
                    button.close(type="button", data-dismiss="modal", aria-label="Close")
                        span(aria-hidden="true") &times;
                .modal-body
                    form#addCategoryForm(onsubmit="add(event)")
                        .form-group
                            label(for="categoryName") Tên danh mục
                            input.form-control#categoryName(type="text", name="name", placeholder="Nhập tên danh mục", required)

                        button.btn.btn-secondary(type="button", data-dismiss="modal") Đóng
                        button.btn.btn-primary(type="submit") Lưu danh mục

    // Modal sửa danh mục
    .modal.fade#editCategoryModal(tabindex="-1", role="dialog", aria-labelledby="editCategoryModalLabel", aria-hidden="true")
        .modal-dialog(role="document")
            .modal-content
                .modal-header
                    h5.modal-title#editCategoryModalLabel Sửa danh mục
                    button.close(type="button", data-dismiss="modal", aria-label="Close")
                        span(aria-hidden="true") &times;
                .modal-body
                    form#editCategoryForm(onsubmit="edit(event)", data-id="")
                        .form-group
                            label(for="categoryName") Nhập tên danh mục thay đổi
                            input.form-control#categoryName(type="text", name="name", placeholder="Nhập tên danh mục", required)

                        button.btn.btn-secondary(type="button", data-dismiss="modal") Đóng
                        button.btn.btn-primary(type="submit") Lưu chỉnh sửa

    script.
        function goback() {
            window.history.back();
        }

        function add(e) {
            e.preventDefault(); 
            const name = document.getElementById('categoryName').value; 

            fetch('/admin/category/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ name: name })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert(data.message);
                    location.reload(); 
                } else {
                    alert(data.message);
                }
            })
            .catch(error => {
                console.error('Lỗi:', error);
            });
        }

        // Hàm xử lý xóa danh mục
        function deleteCategory(button) {
            const id = button.getAttribute('data-id');
            if (confirm("Bạn có chắc chắn muốn xóa danh mục này không?")) {
                fetch(`/admin/category/delete`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ id: id })
                })
                .then(res => res.json())
                .then(data => {
                    if (data.success) {
                        alert(data.message);
                        location.reload();
                    } else {
                        alert(data.message || 'Không thể xóa danh mục.');
                    }
                })
                .catch(err => {
                    console.error('Lỗi khi xóa danh mục:', err);
                    alert("Có lỗi xảy ra, vui lòng thử lại sau!");
                });
            }
        }

        // Hàm xử lý chỉnh sửa danh mục
        function edit(e) {
            e.preventDefault();
            const name = document.getElementById('categoryName').value;
            console.log(name)   
            const id = document.getElementById('editCategoryForm').getAttribute('data-id'); // Lấy ID từ form

            fetch('/admin/category/edit', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ id: id, name: name })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert(data.message);
                    location.reload();
                } else {
                    alert(data.message);
                }
            })
            .catch(error => {
                console.error('Lỗi:', error);
            });
        }

        // Cập nhật modal sửa khi nhấp vào nút "Đổi tên"
        document.querySelectorAll('.btn.btn-primary[data-toggle="modal"]').forEach(button => {
            button.addEventListener('click', function() {
                const categoryId = this.getAttribute('data-id');
                const categoryName = this.closest('tr').querySelector('td:nth-child(2)').textContent;
                const editForm = document.getElementById('editCategoryForm');
                const categoryNameInput = editForm.querySelector('#categoryName');
                
                categoryNameInput.value = categoryName; // Đặt giá trị tên danh mục vào ô input
                editForm.setAttribute('data-id', categoryId); // Lưu id danh mục vào form để sau này sử dụng khi submit
            });
        });
